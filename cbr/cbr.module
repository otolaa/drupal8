<?php
use Drupal\Core\Url;
use Drupal\Core\Cache\Cache;

/* Implements hook_preprocess_HOOK() for block templates. */
function cbr_preprocess_block(&$variables) {
    /* if ($variables['plugin_id'] == 'search_form_block') {
        $variables['attributes']['role'] = 'search';
    }*/
}

/* ARRAY_RETURN */
function cbr_parser_return(){
    $cbr_arr = NULL;
    $date_ = date("d/m/Y", time());
    $url = "http://www.cbr.ru/scripts/XML_daily.asp";
    $xml = simplexml_load_file($url);
    if($xml ===  FALSE){
        // deal with error
        return FALSE;
    }
    //
    $dt_ = (string)$xml->attributes()->Date;
    $cbr = [];
    $i=0;
    foreach ($xml->Valute AS $currency_){
        foreach ($currency_ AS $val_){
            $cbr[$i][] = (string)$val_;
        }
        $i++;
    }
    $cbr_arr = ["DATE"=>$dt_, "ITEMS"=>$cbr];
    return $cbr_arr;
}

/* XML */
function cbr_get($ignore_cache = FALSE){
    $cid = 'cbr_get:'.\Drupal::languageManager()->getCurrentLanguage()->getId();
    $cbr_arr = NULL;
    if (!$ignore_cache && $cache = \Drupal::cache()->get($cid)) {
        $cbr_arr = $cache->data;
    }
    else {
        $cbr_parser = cbr_parser_return();
        if($cbr_parser){
            //
            $res = unserialize(file_get_contents(dirname(__FILE__)."/src/parser_cbr.txt"));
            $res = $res?$res:[];
            $res = count($res)?array_merge([$cbr_parser['DATE']=>$cbr_parser],$res):[$cbr_parser['DATE']=>$cbr_parser];
            $res = array_slice($res, 0, 10);   // returns a slice of an array of 10 elements
            $cbr_arr = $res;
            // Here you need an algorithm to save the xml file on the server
            file_put_contents(dirname(__FILE__)."/src/parser_cbr.txt", serialize($cbr_arr));
            // save the array to the cache
            \Drupal::cache()->set($cid, $cbr_arr);
        }else{
            // If there is no parsing channel then you need to take from the file on the server
            $cbr_arr = unserialize(file_get_contents(dirname(__FILE__)."/src/parser_cbr.txt"));
        }
    }
    return $cbr_arr;
}

/* Implements hook_cron(). */
function cbr_cron() {
    /* If 60 minutes passed since last time. */
    if ((REQUEST_TIME - \Drupal::state()->get('system.cron_last')) > 3600) {
        // Do something.
        cbr_get(TRUE);
    }
}
    
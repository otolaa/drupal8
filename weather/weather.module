<?php

use Drupal\weather\weatherAPI;
use Drupal\Core\Url;
use Drupal\Core\Cache\Cache;

/* Implements hook_preprocess_HOOK() for block templates. */
function weather_preprocess_block(&$variables) {
    /* if ($variables['plugin_id'] == 'search_form_block') {
        $variables['attributes']['role'] = 'search';
    }*/
}

function weather_xml_get($ignore_cache = FALSE){
    $cid = 'weather_xml_get:'.\Drupal::languageManager()->getCurrentLanguage()->getId();
    $weather_xml_ = NULL;
    if (!$ignore_cache && $cache = \Drupal::cache()->get($cid)) {
        $weather_xml_ = $cache->data;
    }
    else {
        $weather_xml_ = weatherAPI::weatherParserXpath();
        if($weather_xml_){
            // Here you need an algorithm to save the xml file on the server
            file_put_contents(dirname(__FILE__)."/src/parser_weather.txt", serialize($weather_xml_));
            // save the array to the cache
            \Drupal::cache()->set($cid, $weather_xml_);
        }else{
            // If there is no parsing channel then you need to take from the file on the server
            $weather_xml_ = unserialize(file_get_contents(dirname(__FILE__)."/src/parser_weather.txt"));
        }
    }
    return $weather_xml_;
}

/* Implements hook_cron(). */
function weather_cron() {
    /* If 60 minutes passed since last time. */
    if ((REQUEST_TIME - \Drupal::state()->get('system.cron_last')) > 3600) {
        // Do something.
        weather_xml_get(TRUE);
    }
}